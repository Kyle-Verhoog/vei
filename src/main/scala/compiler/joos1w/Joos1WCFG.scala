package compiler.joos1w

object Joos1WCFG {
  val terminals: Set[String] = Set(
    "shift_expression",
    "start_state",
    "compilation_unit",
    "method_declarator",
    "constructor_declarator",
    "abstract_method_declaration",
    "additive_expression",
    "and_expression",
    "argument_list",
    "array_access",
    "array_creation_expression",
    "array_type",
    "assignment",
    "assignment_expression",
    "assignment_operator",
    "block",
    "block_statement",
    "block_statements",
    "cast_expression",
    "class_body",
    "class_body_declaration",
    "class_body_declarations",
    "class_declaration",
    "class_instance_creation_expression",
    "class_member_declaration",
    "class_or_interface_type",
    "class_type",
    "conditional_and_expression",
    "conditional_expression",
    "conditional_or_expression",
    "constant_expression",
    "constructor_declaration",
    "dim_exprs",
    "dims",
    "empty_statement",
    "equality_expression",
    "exclusive_or_expression",
    "expression",
    "expression_opt",
    "expression_statement",
    "extends_interfaces",
    "field_access",
    "field_declaration",
    "for_init",
    "for_statement",
    "for_statement_no_short_if",
    "for_update",
    "formal_parameter",
    "formal_parameter_list",
    "if_then_else_statement",
    "if_then_else_statement_no_short_if",
    "if_then_statement",
    "import_declaration",
    "import_declarations",
    "inclusive_or_expression",
    "integral_type",
    "interface_body",
    "interface_declaration",
    "interface_member_declaration",
    "interface_member_declarations",
    "interface_type",
    "interface_type_list",
    "interfaces",
    "left_hand_side",
    "literal",
    "local_variable_declaration",
    "local_variable_declaration_statement",
    "method_body",
    "method_declaration",
    "method_header",
    "method_invocation",
    "modifier",
    "modifiers",
    "multiplicative_expression",
    "name",
    "numeric_type",
    "package_declaration",
    "postfix_expression",
    "primary",
    "primary_no_new_array",
    "primitive_type",
    "qualified_name",
    "reference_type",
    "relational_expression",
    "return_statement",
    "simple_name",
    "single_type_import_declaration",
    "statement",
    "statement_expression",
    "statement_no_short_if",
    "statement_without_trailing_substatement",
    "super",
    "type",
    "type_declaration",
    "type_import_on_demand_declaration",
    "unary_expression",
    "unary_expression_not_plus_minus",
    "variable_declarator",
    "variable_declarator_id",
    "variable_initializer",
    "while_statement",
    "while_statement_no_short_if",
    "start_state",
  )

}
